{"version":3,"file":"Image-f3cc826c.js","sources":["../../../../app/src/components/atoms/image/Image.vue"],"sourcesContent":["<template>\n  <img\n    :class=\"classes\"\n    :src=\"src\"\n    :onerror=\"() => emits('error')\"\n    :on-load=\"() => emits('load')\"\n    :on-loadstart=\"() => emits('loadstart')\"\n    :alt=\"alt\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted } from 'vue';\nimport './Image.scss';\nimport { ImageFocus } from './types';\n\ninterface Props {\n  src: string;\n  alt?: string;\n  aspectRatio?: string;\n  cover?: boolean;\n  inline?: boolean;\n  height?: string | number;\n  width?: string | number;\n  maxHeight?: string | number;\n  maxWidth?: string | number;\n  minHeight?: string | number;\n  minWidth?: string | number;\n  focus?: ImageFocus;\n}\n\nonMounted(() => {\n  if (!props.alt) {\n    console.warn('No alt provided for image. src: ' + props.src);\n  }\n});\n\nconst props = withDefaults(defineProps<Props>(), {\n  aspectRatio: 'unset',\n});\n\nconst emits = defineEmits<{\n  (event: 'error'): void;\n  (event: 'load'): void;\n  (event: 'loadstart'): void;\n}>();\n\nconst toCssValue = (dim: string | number | undefined) => {\n  if (!dim) {\n    return 'unset';\n  } else if (typeof dim === 'number') {\n    return `${dim}px`;\n  } else {\n    return dim;\n  }\n};\n\nconst position = computed(() => {\n  if (props.focus) {\n    return `${props.focus.x * 100}% ${props.focus.y * 100}%`;\n  }\n\n  return 'center';\n});\n\nconst classes = computed(() => ({\n  'app-image': true,\n  'app-image-cover': props.cover,\n  'app-image-inline': props.inline,\n}));\n</script>\n\n<style>\nimg {\n  aspect-ratio: v-bind(aspectRatio);\n  width: v-bind(toCssValue(width));\n  height: v-bind(toCssValue(height));\n  max-width: v-bind(toCssValue(maxWidth));\n  max-height: v-bind(toCssValue(maxHeight));\n  min-width: v-bind(toCssValue(minWidth));\n  min-height: v-bind(toCssValue(minHeight));\n  object-position: v-bind(position);\n}\n</style>\n"],"names":["onMounted","props","toCssValue","dim","position","computed","classes"],"mappings":"0lBA+BAA,EAAU,IAAM,CACTC,EAAM,KACD,QAAA,KAAK,mCAAqCA,EAAM,GAAG,CAC7D,CACD,EAYK,MAAAC,EAAcC,GACbA,EAEM,OAAOA,GAAQ,SACjB,GAAGA,MAEHA,EAJA,QAQLC,EAAWC,EAAS,IACpBJ,EAAM,MACD,GAAGA,EAAM,MAAM,EAAI,QAAQA,EAAM,MAAM,EAAI,OAG7C,QACR,EAEKK,EAAUD,EAAS,KAAO,CAC9B,YAAa,GACb,kBAAmBJ,EAAM,MACzB,mBAAoBA,EAAM,MAC1B,EAAA"}