name: Pull Request
concurrency:
  group: pr_${{ github.event.pull_request.number }}
  cancel-in-progress: true
on:
  pull_request:

env:
  project: nx-vite-tailwind
  account-id: 53b218bcbcf8884b7fb40d27ee50ac09

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx
      # - run: npx nx affected -t lint --parallel=3 When - uses: nrwl/nx-set-shas@v3 is enabled, use this
      - run: npx nx run-many -t lint --parallel=3

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx
      # - run: npx nx format:check When - uses: nrwl/nx-set-shas@v3 is enabled, use thisv
      - run: npx nx format:check --all

  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx
      # - run: npx nx affected -t stylelint --parallel=3 When - uses: nrwl/nx-set-shas@v3 is enabled, use this
      - run: npx nx run-many -t stylelint --parallel=3

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx
      - name: Test
        # run: npx nx affected -t test --parallel=3 --configuration=ci When - uses: nrwl/nx-set-shas@v3 is enabled, use this
        run: npx nx run-many -t test --parallel=3 --configuration=ci

  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx
      - name: Build Storybook
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        # run: npx nx affected -t build-storybook --parallel=3 --configuration=dev When - uses: nrwl/nx-set-shas@v3 is enabled, use this
        run: npx nx run-many -t build-storybook --parallel=3 --configuration=dev

  build-publish:
    name: Build and publish
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.branch-url.outputs.url }}
    permissions:
      contents: read
      checks: write
      deployments: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v3 Disable until main uses nx

      - name: Build
        # run: npx nx affected -t build --parallel=3 --configuration=dev When - uses: nrwl/nx-set-shas@v3 is enabled, use this
        run: npx nx run-many -t build --parallel=3 --configuration=dev

      - name: Publish to Cloudflare Pages
        id: publish
        uses: cloudflare/pages-action@v1.5.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.account-id }}
          projectName: ${{ env.project }}
          directory: dist/app
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Deploying with

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ## Deploying with &nbsp;<a href="https://pages.dev"><img alt="Cloudflare Pages" src="https://user-images.githubusercontent.com/23264/106598434-9e719e00-654f-11eb-9e59-6167043cfa01.png" width="16"></a> &nbsp;Cloudflare Pages
            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Status:</strong></td><td>&nbsp;âœ…&nbsp; Deploy successful!</td></tr>
            <tr><td><strong>Branch Preview URL:</strong></td><td>
            <a href='${{ steps.publish.outputs.alias }}'>${{ steps.publish.outputs.alias }}</a>
            </td></tr>
            </table>
            *Pusher: @${{ github.actor }}*
